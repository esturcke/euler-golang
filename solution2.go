package euler

import (
	"strconv"
)

/*
# Even Fibonacci numbers

[Problem 2](http://projecteuler.net/problem=2)

Each new term in the Fibonacci sequence is generated by adding the
previous two terms. By starting with 1 and 2, the first 10 terms will be:

                  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.

*/
func solve2() string {
	fibs := make(chan int)
	go fibsTo(4000000, fibs)
	sum := 0
	for fib := range fibs {
		if fib%2 == 0 {
			sum += fib
		}
	}
	return strconv.Itoa(sum)
}

func fibsTo(max int, out chan<- int) {
	defer close(out)
	m, n := 1, 2
	for m <= max {
		out <- m
		m, n = n, m+n
	}
}
